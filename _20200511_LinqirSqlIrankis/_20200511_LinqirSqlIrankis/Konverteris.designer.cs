#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _20200511_LinqirSqlIrankis
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DuomenuBaze")]
	public partial class KonverterisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVartotojai(Vartotojai instance);
    partial void UpdateVartotojai(Vartotojai instance);
    partial void DeleteVartotojai(Vartotojai instance);
    partial void InsertAdresai(Adresai instance);
    partial void UpdateAdresai(Adresai instance);
    partial void DeleteAdresai(Adresai instance);
    partial void InsertPreke(Preke instance);
    partial void UpdatePreke(Preke instance);
    partial void DeletePreke(Preke instance);
    #endregion
		
		public KonverterisDataContext() : 
				base(global::_20200511_LinqirSqlIrankis.Properties.Settings.Default.DuomenuBazeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KonverterisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KonverterisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KonverterisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KonverterisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Vartotojai> Vartotojais
		{
			get
			{
				return this.GetTable<Vartotojai>();
			}
		}
		
		public System.Data.Linq.Table<Adresai> Adresais
		{
			get
			{
				return this.GetTable<Adresai>();
			}
		}
		
		public System.Data.Linq.Table<Preke> Prekes
		{
			get
			{
				return this.GetTable<Preke>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vartotojai")]
	public partial class Vartotojai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Vardas;
		
		private string _Pavarde;
		
		private EntitySet<Adresai> _Adresais;
		
		private EntitySet<Preke> _Prekes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVardasChanging(string value);
    partial void OnVardasChanged();
    partial void OnPavardeChanging(string value);
    partial void OnPavardeChanged();
    #endregion
		
		public Vartotojai()
		{
			this._Adresais = new EntitySet<Adresai>(new Action<Adresai>(this.attach_Adresais), new Action<Adresai>(this.detach_Adresais));
			this._Prekes = new EntitySet<Preke>(new Action<Preke>(this.attach_Prekes), new Action<Preke>(this.detach_Prekes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vardas", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Vardas
		{
			get
			{
				return this._Vardas;
			}
			set
			{
				if ((this._Vardas != value))
				{
					this.OnVardasChanging(value);
					this.SendPropertyChanging();
					this._Vardas = value;
					this.SendPropertyChanged("Vardas");
					this.OnVardasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pavarde", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Pavarde
		{
			get
			{
				return this._Pavarde;
			}
			set
			{
				if ((this._Pavarde != value))
				{
					this.OnPavardeChanging(value);
					this.SendPropertyChanging();
					this._Pavarde = value;
					this.SendPropertyChanged("Pavarde");
					this.OnPavardeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vartotojai_Adresai", Storage="_Adresais", ThisKey="Id", OtherKey="VartotojoId")]
		public EntitySet<Adresai> Adresais
		{
			get
			{
				return this._Adresais;
			}
			set
			{
				this._Adresais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vartotojai_Preke", Storage="_Prekes", ThisKey="Id", OtherKey="Vartotojas")]
		public EntitySet<Preke> Prekes
		{
			get
			{
				return this._Prekes;
			}
			set
			{
				this._Prekes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Adresais(Adresai entity)
		{
			this.SendPropertyChanging();
			entity.Vartotojai = this;
		}
		
		private void detach_Adresais(Adresai entity)
		{
			this.SendPropertyChanging();
			entity.Vartotojai = null;
		}
		
		private void attach_Prekes(Preke entity)
		{
			this.SendPropertyChanging();
			entity.Vartotojai = this;
		}
		
		private void detach_Prekes(Preke entity)
		{
			this.SendPropertyChanging();
			entity.Vartotojai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Adresai")]
	public partial class Adresai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Adresas;
		
		private System.Nullable<int> _PastoKodas;
		
		private System.Nullable<int> _NamoNumber;
		
		private int _VartotojoId;
		
		private EntityRef<Vartotojai> _Vartotojai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdresasChanging(string value);
    partial void OnAdresasChanged();
    partial void OnPastoKodasChanging(System.Nullable<int> value);
    partial void OnPastoKodasChanged();
    partial void OnNamoNumberChanging(System.Nullable<int> value);
    partial void OnNamoNumberChanged();
    partial void OnVartotojoIdChanging(int value);
    partial void OnVartotojoIdChanged();
    #endregion
		
		public Adresai()
		{
			this._Vartotojai = default(EntityRef<Vartotojai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresas", DbType="NVarChar(MAX)")]
		public string Adresas
		{
			get
			{
				return this._Adresas;
			}
			set
			{
				if ((this._Adresas != value))
				{
					this.OnAdresasChanging(value);
					this.SendPropertyChanging();
					this._Adresas = value;
					this.SendPropertyChanged("Adresas");
					this.OnAdresasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastoKodas", DbType="Int")]
		public System.Nullable<int> PastoKodas
		{
			get
			{
				return this._PastoKodas;
			}
			set
			{
				if ((this._PastoKodas != value))
				{
					this.OnPastoKodasChanging(value);
					this.SendPropertyChanging();
					this._PastoKodas = value;
					this.SendPropertyChanged("PastoKodas");
					this.OnPastoKodasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamoNumber", DbType="Int")]
		public System.Nullable<int> NamoNumber
		{
			get
			{
				return this._NamoNumber;
			}
			set
			{
				if ((this._NamoNumber != value))
				{
					this.OnNamoNumberChanging(value);
					this.SendPropertyChanging();
					this._NamoNumber = value;
					this.SendPropertyChanged("NamoNumber");
					this.OnNamoNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VartotojoId", DbType="Int NOT NULL")]
		public int VartotojoId
		{
			get
			{
				return this._VartotojoId;
			}
			set
			{
				if ((this._VartotojoId != value))
				{
					if (this._Vartotojai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVartotojoIdChanging(value);
					this.SendPropertyChanging();
					this._VartotojoId = value;
					this.SendPropertyChanged("VartotojoId");
					this.OnVartotojoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vartotojai_Adresai", Storage="_Vartotojai", ThisKey="VartotojoId", OtherKey="Id", IsForeignKey=true)]
		public Vartotojai Vartotojai
		{
			get
			{
				return this._Vartotojai.Entity;
			}
			set
			{
				Vartotojai previousValue = this._Vartotojai.Entity;
				if (((previousValue != value) 
							|| (this._Vartotojai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vartotojai.Entity = null;
						previousValue.Adresais.Remove(this);
					}
					this._Vartotojai.Entity = value;
					if ((value != null))
					{
						value.Adresais.Add(this);
						this._VartotojoId = value.Id;
					}
					else
					{
						this._VartotojoId = default(int);
					}
					this.SendPropertyChanged("Vartotojai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prekes")]
	public partial class Preke : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Vardas;
		
		private System.Nullable<double> _Kaina;
		
		private int _Vartotojas;
		
		private EntityRef<Vartotojai> _Vartotojai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVardasChanging(string value);
    partial void OnVardasChanged();
    partial void OnKainaChanging(System.Nullable<double> value);
    partial void OnKainaChanged();
    partial void OnVartotojasChanging(int value);
    partial void OnVartotojasChanged();
    #endregion
		
		public Preke()
		{
			this._Vartotojai = default(EntityRef<Vartotojai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vardas", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Vardas
		{
			get
			{
				return this._Vardas;
			}
			set
			{
				if ((this._Vardas != value))
				{
					this.OnVardasChanging(value);
					this.SendPropertyChanging();
					this._Vardas = value;
					this.SendPropertyChanged("Vardas");
					this.OnVardasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kaina", DbType="Float")]
		public System.Nullable<double> Kaina
		{
			get
			{
				return this._Kaina;
			}
			set
			{
				if ((this._Kaina != value))
				{
					this.OnKainaChanging(value);
					this.SendPropertyChanging();
					this._Kaina = value;
					this.SendPropertyChanged("Kaina");
					this.OnKainaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vartotojas", DbType="Int NOT NULL")]
		public int Vartotojas
		{
			get
			{
				return this._Vartotojas;
			}
			set
			{
				if ((this._Vartotojas != value))
				{
					if (this._Vartotojai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVartotojasChanging(value);
					this.SendPropertyChanging();
					this._Vartotojas = value;
					this.SendPropertyChanged("Vartotojas");
					this.OnVartotojasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vartotojai_Preke", Storage="_Vartotojai", ThisKey="Vartotojas", OtherKey="Id", IsForeignKey=true)]
		public Vartotojai Vartotojai
		{
			get
			{
				return this._Vartotojai.Entity;
			}
			set
			{
				Vartotojai previousValue = this._Vartotojai.Entity;
				if (((previousValue != value) 
							|| (this._Vartotojai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vartotojai.Entity = null;
						previousValue.Prekes.Remove(this);
					}
					this._Vartotojai.Entity = value;
					if ((value != null))
					{
						value.Prekes.Add(this);
						this._Vartotojas = value.Id;
					}
					else
					{
						this._Vartotojas = default(int);
					}
					this.SendPropertyChanged("Vartotojai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
